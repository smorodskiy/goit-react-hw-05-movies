{"version":3,"file":"static/js/691.a0c0379a.chunk.js","mappings":"kNAIaA,EAAOC,EAAAA,QAAAA,GAAS,mDAIhBC,EAAOD,EAAAA,QAAAA,GAAS,+S,SCW7B,EAhBkB,SAAH,GAAoB,IAAdE,EAAM,EAANA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAI,UACFG,EAAOG,KAAI,SAAAC,GACV,IAAQC,EAAuBD,EAAvBC,GAAIC,EAAmBF,EAAnBE,eACZ,OACE,SAAC,KAAI,CAAUC,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaJ,GAAK,UAC5D,SAACN,EAAI,UAAEO,KADED,EAIf,KAGN,C,oICdaK,EAAaZ,EAAAA,QAAAA,IAAU,uGAOvBa,EAAab,EAAAA,QAAAA,KAAW,iFAMxBc,EAAQd,EAAAA,QAAAA,MAAY,2OAepBe,EAASf,EAAAA,QAAAA,OAAa,6M,kBCanC,EAtCe,WACb,OAA0BgB,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KACpC,GAA4BL,EAAAA,EAAAA,UAAS,IAAG,eAAjCd,EAAM,KAAEoB,EAAS,KAiBxB,OANAC,EAAAA,EAAAA,YAAU,WACR,IAAMN,EAAQG,EAAaI,IAAI,SAC1BP,IACLQ,EAAAA,EAAAA,IAAgBR,GAAOS,KAAKJ,EAC9B,GAAG,CAACF,KAGF,iCACE,SAACR,EAAU,WACT,UAACC,EAAU,CAACc,SAdQ,SAAAC,GACxBA,EAAEC,iBACFR,EAAgB,CAAEJ,MAAAA,GACpB,EAW8C,WACtC,SAACH,EAAK,CACJgB,KAAK,OACLC,KAAK,QACLC,SAtBgB,SAAAJ,GACxBV,EAASU,EAAEK,OAAOC,MACpB,EAqBUA,MAAOjB,KAET,SAACF,EAAM,CAACe,KAAK,SAAQ,0BAGzB,SAAC,IAAS,CAAC5B,OAAQA,MAGzB,C,oLCxCAiC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,yCAAG,2GACRF,EAAAA,GAAAA,IAAU,+BAAD,OAAgCC,IAAW,KAAD,EAA9D,OAA8D,SAAlEE,EAAI,EAAJA,KAAI,kBAELA,EAAKC,SAAO,2CACpB,kBAJ6B,mCAMjBC,EAAY,yCAAG,WAAMC,GAAO,4FACrBN,EAAAA,GAAAA,IAAU,SAAD,OAAUM,EAAO,oBAAYL,EAAO,oBAAmB,KAAD,EAAxE,OAAHM,EAAG,yBAEFA,EAAIJ,MAAI,2CAChB,gBAJwB,sCAMZb,EAAe,yCAAG,WAAMR,GAAK,4FACtBkB,EAAAA,GAAAA,IAAU,wBAAD,OACDC,EAAO,kBAAUnB,EAAK,+CAC9C,KAAD,EAFQ,OAAHyB,EAAG,yBAIFA,EAAIJ,KAAKC,SAAO,2CACxB,gBAN2B,sCAQfI,EAAS,yCAAG,WAAMF,GAAO,4FAClBN,EAAAA,GAAAA,IAAU,SAAD,OAChBM,EAAO,4BAAoBL,EAAO,oBAC3C,KAAD,EAFQ,OAAHM,EAAG,yBAIFA,EAAIJ,KAAKM,MAAI,2CACrB,gBANqB,sCAQTC,EAAU,yCAAG,WAAMJ,GAAO,4FACnBN,EAAAA,GAAAA,IAAU,SAAD,OAChBM,EAAO,4BAAoBL,EAAO,2BAC3C,KAAD,EAFQ,OAAHM,EAAG,yBAIFA,EAAIJ,KAAKC,SAAO,2CACxB,gBANsB,qC","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","utils/api.js"],"sourcesContent":["// For stylish components\nimport styled from 'styled-components';\n\n// CSS in JS\nexport const List = styled.ul`\n  padding: 0 20px 0 20px;\n`;\n\nexport const Item = styled.li`\n  font-weight: 700;\n  margin-bottom: 0.5em;\n  padding: 10px;\n  background-color: #e3f0fd;\n  border: 1px solid #c5c5c5;\n  border-radius: 3px;\n  box-shadow: 1px 1px 3px 0px rgba(134, 134, 134, 0.21);\n\n  &:hover {\n    background-color: #b6d8fa;\n    cursor: pointer;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './MoviesList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(film => {\n        const { id, original_title } = film;\n        return (\n          <Link key={id} state={{ from: location }} to={`/movies/${id}`}>\n            <Item>{original_title}</Item>\n          </Link>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MovieList;\n","// For stylish components\nimport styled from 'styled-components';\n\nexport const SearchWrap = styled.div`\n  width: 30%;\n  position: relative;\n  margin: auto;\n  margin-bottom: 20px;\n`;\n\nexport const FormStyled = styled.form`\n  width: 100%;\n  position: relative;\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  border: 3px solid #00b4cc;\n  border-right: none;\n  padding: 5px;\n  height: 20px;\n  border-radius: 5px 0 0 5px;\n  outline: none;\n  color: #9dbfaf;\n\n  :focus {\n    color: #00b4cc;\n  }\n`;\n\nexport const Button = styled.button`\n  height: 36px;\n  border: 1px solid #00b4cc;\n  background: #00b4cc;\n  text-align: center;\n  color: #fff;\n  border-radius: 0 5px 5px 0;\n  cursor: pointer;\n  font-size: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'utils/api';\nimport { Button, FormStyled, Input, SearchWrap } from './Movies.styled';\nimport  MovieList  from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  const handleChangeQuery = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmitQuery = e => {\n    e.preventDefault();\n    setSearchParams({ query });    \n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n    getMovieByQuery(query).then(setMovies);\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchWrap>\n        <FormStyled onSubmit={handleSubmitQuery}>\n          <Input\n            type=\"text\"\n            name=\"movie\"\n            onChange={handleChangeQuery}\n            value={query}\n          />\n          <Button type=\"submit\">Search</Button>\n        </FormStyled>\n      </SearchWrap>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd5db08081a23b85f2c18e58b0bb5a9b8';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const res = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n  return res.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return res.data.results;\n};\n"],"names":["List","styled","Item","movies","location","useLocation","map","film","id","original_title","state","from","to","SearchWrap","FormStyled","Input","Button","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","setMovies","useEffect","get","getMovieByQuery","then","onSubmit","e","preventDefault","type","name","onChange","target","value","axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","res","getActors","cast","getReviews"],"sourceRoot":""}