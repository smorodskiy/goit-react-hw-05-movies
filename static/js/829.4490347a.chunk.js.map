{"version":3,"file":"static/js/829.4490347a.chunk.js","mappings":"oQAEaA,EAAOC,EAAAA,QAAAA,GAAS,4CAIhBC,EAAOD,EAAAA,QAAAA,GAAS,6GAOhBE,EAAQF,EAAAA,QAAAA,GAAS,gD,SC0B9B,EAlCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAClBC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,yCAAG,mHAEKC,EAAAA,EAAAA,IAAWJ,GAAS,KAAD,EAAhCK,EAAI,OACVN,EAAWM,GAAM,gDAEjBC,QAAQC,IAAI,EAAD,IAAI,yDAElB,kBAPc,mCAQfJ,GACF,GAAG,CAACH,KAGF,yBACGF,EAAQU,OAAS,GAChB,SAACf,EAAI,UACFK,EAAQW,KAAI,SAAAC,GAAM,OACjB,UAACf,EAAI,YACH,SAACC,EAAK,UAAEc,EAAOC,UACf,uBAAID,EAAOE,YAFFF,EAAOG,GAGX,OAIX,qEAIR,C,oLCnCAC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,yCAAG,2GACRF,EAAAA,GAAAA,IAAU,+BAAD,OAAgCC,IAAW,KAAD,EAA9D,OAA8D,SAAlEV,EAAI,EAAJA,KAAI,kBAELA,EAAKY,SAAO,2CACpB,kBAJ6B,mCAMjBC,EAAY,yCAAG,WAAMlB,GAAO,4FACrBc,EAAAA,GAAAA,IAAU,SAAD,OAAUd,EAAO,oBAAYe,EAAO,oBAAmB,KAAD,EAAxE,OAAHI,EAAG,yBAEFA,EAAId,MAAI,2CAChB,gBAJwB,sCAMZe,EAAe,yCAAG,WAAMC,GAAK,4FACtBP,EAAAA,GAAAA,IAAU,wBAAD,OACDC,EAAO,kBAAUM,EAAK,+CAC9C,KAAD,EAFQ,OAAHF,EAAG,yBAIFA,EAAId,KAAKY,SAAO,2CACxB,gBAN2B,sCAQfK,EAAS,yCAAG,WAAMtB,GAAO,4FAClBc,EAAAA,GAAAA,IAAU,SAAD,OAChBd,EAAO,4BAAoBe,EAAO,oBAC3C,KAAD,EAFQ,OAAHI,EAAG,yBAIFA,EAAId,KAAKkB,MAAI,2CACrB,gBANqB,sCAQTnB,EAAU,yCAAG,WAAMJ,GAAO,4FACnBc,EAAAA,GAAAA,IAAU,SAAD,OAChBd,EAAO,4BAAoBe,EAAO,2BAC3C,KAAD,EAFQ,OAAHI,EAAG,yBAIFA,EAAId,KAAKY,SAAO,2CACxB,gBANsB,qC","sources":["components/Review/Review.styled.jsx","components/Review/Review.jsx","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 5px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'utils/api';\nimport { Item, List, Title } from './Review.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getReviews(movieId);\n        setReviews(data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(review => (\n            <Item key={review.id}>\n              <Title>{review.author}</Title>\n              <p>{review.content}</p>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>We don't have any reviews for that movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd5db08081a23b85f2c18e58b0bb5a9b8';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const res = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n  return res.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return res.data.results;\n};\n"],"names":["List","styled","Item","Title","useState","reviews","setReviews","movieId","useParams","useEffect","fetchData","getReviews","data","console","log","length","map","review","author","content","id","axios","API_KEY","getTrendingMovies","results","getMovieById","res","getMovieByQuery","query","getActors","cast"],"sourceRoot":""}